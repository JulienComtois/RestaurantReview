@model RestaurantReview.Models.Restaurant
@using RestaurantReview.Utility;


@{
    ViewBag.Title = "Details";
    bool isAdmin = Util.IsAdmin(User.Identity.Name);
}

<h2>Details</h2>

<div>
    <h4>Restaurant</h4>
    <hr />
    <p>
        @Html.ActionLink("Back to Restaurants", "Index") |
        @Html.ActionLink("Write a Review", "Create", "Reviews", new { id = Model.Restaurant_Id }, null) 
		@if (isAdmin)
		{
			@Html.Raw("| ")
			@Html.ActionLink("Edit", "Edit", new { id = Model.Restaurant_Id })
            @Html.Raw(" | ")
			@Html.ActionLink("View Edit Log", "EditLog", new { id = Model.Restaurant_Id })
		}
    </p>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @{ string price = ""; }
			@for (var ctr = 0; ctr < Model.Price; ctr++)
			{
				price += "$";
			}
			@price
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Postal_Code)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Postal_Code)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Province)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Province)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street_Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street_Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Street_Number)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Street_Number)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Creation_Date)
        </dt>

        <dd>
           @Model.Creation_Date.ToString("MM/dd/yyyy")
        </dd>

		<dt>
			@Html.DisplayNameFor(model => model.Created_By)
		</dt>

		<dd>
			@Html.DisplayFor(model => model.Created_By)
		</dd>

        <dt>
            @Html.DisplayNameFor(model => model.Views)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Views)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Average_Rating)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Average_Rating)
        </dd>
    </dl>
    <br />
	<h3>Reviews</h3>
	@if (Model.Reviews.Count < 1)
	{
		<p>There are no reviews.</p>
	}
    @foreach (var rev in Model.Reviews.Reverse())
    {
		<hr />
	    string stars = "";
	    <h4 class="bold">@rev.Title</h4><br />
	    <p class="bold">Written by:</p> @rev.Created_By <br />
	    <p class="bold">Written on:</p> @rev.Date.ToString("MM/dd/yyyy") <br />
        for (var i = 0; i < rev.Rating; i++)
        {
            stars += "&#9733;";
        }
	    <p class="bold">Rating: @Html.Raw(stars)</p> <br />
        <br />
	    <p>@rev.Content</p>  <br />
        if(isAdmin)
        {
              @Html.ActionLink("Edit Review", "Edit", "Reviews", new { id = rev.Review_Id }, null)
        }        
    }
</div>